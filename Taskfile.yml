version: '3'

tasks:
  lint:
    desc: "Lint the code"
    cmds:
      - golangci-lint run

  test:
    desc: "Run unittest"
    cmds:
      - go test -tags=unittest -race ./... -cover -coverprofile=coverage.txt -covermode=atomic
      - go tool cover -func=coverage.txt

  integration-test:
    desc: "starts our app and then attempts to run our integration tests"
    cmds:
      - docker-compose up -d db
      - go test -tags=integration -v ./...
    env:

  acceptance-tests:
    desc: "starts our app and then attempts to run our e2e tests"
    cmds:
      - docker-compose up -d --build
      - go test -tags=e2e -v ./...

  build-api:
    desc: "Build API"
    silent: false
    cmds:
      - |
        set -e
          for path in $(find api -name '*.proto' | grep -i "_service" | sed 's/\([^\/]*\/[^\/]*\/[^\/]*\)\/.*/\1/'); do
            output=pkg/$(dirname $path)
            echo $output
            if [ ! -d $output ]; then mkdir -p $output; fi
            for proto_file in $(find $path -name '*.proto'); do
              protoc --proto_path=$(dirname $path) \
              --go_out=$output  \
              --go_opt=paths=source_relative \
              --go-grpc_out=$output \
              --go-grpc_opt=paths=source_relative  \
              $proto_file
            done
          done